{
  "methods": {
    "create": {
      "desc": "创建一个临时的对话框；与调用$q.dialog(...)相同。",
      "params": {
        "opts": {
          "type": "Object",
          "required": true,
          "definition": {
            "class": {
              "type": [ "String", "Array", "Object" ],
              "desc": "应用于对话框Q卡的CSS类名称",
              "examples": [ "my-class" ]
            },

            "style": {
              "type": [ "String", "Array", "Object" ],
              "desc": "应用于对话框QCard的CSS样式",
              "examples": [ "border: 2px solid black" ]
            }
          }
        }
      },

      "returns": {
        "type": "Object",
        "desc": "可连锁的对象",
        "tsType": "DialogChainObject",
        "definition": {
          "onOk": {
            "type": "Function",
            "required": true,
            "desc": "接收一个Function参数，告诉当按下OK键/选择选项时要做什么。",
            "params": {
              "callbackFn": {
                "type": "Function",
                "desc": "告诉你该怎么做",
                "required": true,
                "params": {
                  "payload": {
                    "type": "Any",
                    "desc": "如果用参数调用onDialogOK或用'ok'事件发射一个，则为有效载荷",
                    "required": false,
                    "examples": [ "'Quasar Framework'", "[ 1, 2, 6, 3 ]", "{ book: { id: 1, name: 'Lorem Ipsum' }, user: { name: 'Lorem J. Ipsum', role: 'admin' } }" ]
                  }
                },
                "returns": null,
                "examples": [ "() => console.log('OK!')", "(payload) => Notify.create({ type: 'positive', message: `Successfully saved '${payload.book.name}' book!` })" ]
              }
            },
            "returns": {
              "type": "Object",
              "desc": "链式对象",
              "tsType": "DialogChainObject",
              "__exemption": [ "examples" ]
            }
          },

          "onCancel": {
            "type": "Function",
            "required": true,
            "desc": "接收一个函数作为参数，以告诉当按下 \"取消\"键/对话框被取消时要做什么。",
            "params": {
              "callbackFn": {
                "type": "Function",
                "desc": "告诉你该怎么做",
                "required": true,
                "params": null,
                "returns": null
              }
            },
            "returns": {
              "type": "Object",
              "desc": "链式对象",
              "tsType": "DialogChainObject",
              "__exemption": [ "examples" ]
            }
          },

          "onDismiss": {
            "type": "Function",
            "required": true,
            "desc": "接收一个Function参数，以告诉当对话框被关闭时要做什么。",
            "params": {
              "callbackFn": {
                "type": "Function",
                "desc": "告诉你该怎么做",
                "required": true,
                "params": null,
                "returns": null
              }
            },
            "returns": {
              "type": "Object",
              "desc": "链式对象",
              "tsType": "DialogChainObject",
              "__exemption": [ "examples" ]
            }
          },

          "hide": {
            "type": "Function",
            "required": true,
            "desc": "在调用时隐藏对话框",
            "params": null,
            "returns": {
              "type": "Object",
              "desc": "链式对象",
              "tsType": "DialogChainObject",
              "__exemption": [ "examples" ]
            }
          },

          "update": {
            "type": "Function",
            "required": true,
            "desc": "更新初始属性（作为create()参数给出），除了'component'。",
            "params": {
              "opts": {
                "type": "Object",
                "required": true,
                "desc": "Props（除了'component'），它将覆盖初始的create()参数；如果create()是用一个自定义的对话组件调用的，那么这个参数应该包含新的componentProps。",
                "__exemption": [ "examples" ]
              }
            },
            "returns": {
              "type": "Object",
              "desc": "链式对象",
              "tsType": "DialogChainObject",
              "__exemption": [ "examples" ]
            }
          }
        }
      }
    }
  }
}
