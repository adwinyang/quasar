{
  "props": {
    "model-value": {
      "type": "Any",
      "desc": "组件的模型；要么使用这个属性（连同 'update:model-value' 事件的监听器），要么使用v-model指令。",
      "__exemption": [ "examples" ],
      "category": "model"
    },

    "error": {
      "type": "Boolean",
      "desc": "字段是否有验证错误？",
      "category": "behavior"
    },

    "error-message": {
      "type": "String",
      "desc": "验证错误信息（只有在'error'设置为 'true' 时才会显示）。",
      "examples": [ "Username must have at least 5 characters" ],
      "category": "content"
    },

    "no-error-icon": {
      "type": "Boolean",
      "desc": "有错误时隐藏错误图标",
      "category": "content"
    },

    "rules": {
      "type": "Array",
      "tsType": "ValidationRule",
      "desc": "函数/字符串数组；如果是字符串，那么它必须是一个嵌入式验证规则的名称。",
      "examples": [
        ":rules=\"[ val => val.length <= 3 || 'Please use maximum 3 characters' ]\"",
        ":rules=\"[ 'fulltime' ]\""
      ],
      "category": "behavior"
    },

    "reactive-rules": {
      "type": "Boolean",
      "desc": "默认情况下，规则的变化不会触发新的验证，直到模型发生变化；如果设置为 'true'，那么规则的变化将触发验证；有一个性能惩罚，所以只在你真正需要的时候使用它。",
      "category": "behavior"
    },

    "lazy-rules": {
      "type": [ "Boolean", "String" ],
      "desc": "如果设置为布尔值 'true'，那么只有在字段第一次失去焦点后才会根据 'rules'(规则) 检查验证状态；如果设置为 'ondemand'(按需)，那么只有当组件的 validate() 方法被手动调用或当包装的 QForm 自己提交时才会触发。",
      "values": [ "(Boolean) true", "(Boolean) false", "ondemand" ],
      "category": "behavior"
    }
  },

  "methods": {
    "resetValidation": {
      "desc": "重置验证状态"
    },

    "validate": {
      "desc": "触发一个验证",
      "params": {
        "value": {
          "type": "Any",
          "desc": "用于验证的可选值",
          "__exemption": [ "examples" ]
        }
      },
      "returns": {
        "type": [ "Boolean", "Promise<boolean>" ],
        "desc": "如果没有异步规则，则为真/假，否则为带有结果 的Promise（真->验证成功，假->检测到无效模型）。",
        "examples": [
          "true",
          "validate().then(outcome => { ... })"
        ]
      }
    }
  }
}
